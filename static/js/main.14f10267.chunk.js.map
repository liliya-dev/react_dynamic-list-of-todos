{"version":3,"sources":["App.tsx","Table.tsx","api.js","Button.tsx","index.tsx"],"names":["initialState","Table","preparedList","sortTodos","getKeyValue","key","obj","sortBy","event","value","preventDefault","sorted","sort","a","b","className","scope","href","onClick","map","todo","uuid","type","readOnly","checked","completed","title","user","getTodos","fetch","then","response","json","tempData","data","getUsers","Button","beforeLoaded","afterLoaded","getTodoList","findUserById","id","users","find","name","todos","list","userId","App","useState","isLoading","setIsLoading","isLoaded","setIsLoaded","setPreparedList","isStarted","setIsStarted","ReactDOM","render","document","getElementById"],"mappings":"qNAOIA,E,6DCFSC,EAAqC,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC3DC,EAAc,SAAkCC,EAAQC,GAA1C,OAAqDA,EAAID,IAEvEE,EAAS,SAACC,EAAuCC,GACrDD,EAAME,iBACN,IAAMC,EAA0BT,EAAaU,MAAK,SAACC,EAAkBC,GAInE,OAHeV,EAAsCK,EAAOI,IAAM,MACnDT,EAAsCK,EAAOK,IAAM,IAEtC,GAAK,KAGnCX,EAAUQ,IAGZ,OACE,2BAAOI,UAAU,sCACf,2BAAOA,UAAU,cACf,4BACE,wBAAIC,MAAM,OACR,uBAAGC,KAAK,IAAIC,QAAS,SAACV,GAAD,OAAWD,EAAOC,EAAO,eAA9C,cAIF,wBAAIQ,MAAM,OACR,uBAAGC,KAAK,IAAIC,QAAS,SAACV,GAAD,OAAWD,EAAOC,EAAO,WAA9C,UAIF,wBAAIQ,MAAM,OACR,uBAAGC,KAAK,IAAIC,QAAS,SAACV,GAAD,OAAWD,EAAOC,EAAO,UAA9C,WAMN,+BAEIN,EAAaiB,KAAI,SAAAC,GAAI,OACnB,wBAAIf,IAAKgB,kBACP,4BAAI,2BAAOC,KAAK,WAAWC,UAAQ,EAACC,QAASJ,EAAKK,aAClD,4BAAKL,EAAKM,OACV,4BAAKN,EAAKO,a,uBC5CXC,EAAQ,uCAAG,4BAAAf,EAAA,sEACCgB,MAJR,2CAKZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFP,cAChBC,EADgB,yBAIfA,EAASC,MAJM,2CAAH,qDAORC,EAAQ,uCAAG,4BAAAtB,EAAA,sEACCgB,MAVR,2CAWZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFP,cAChBC,EADgB,yBAIfA,EAASC,MAJM,2CAAH,qDCDRE,EAAgC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACtDC,EAAW,uCAAG,qBAMTC,EANS,WAAA3B,EAAA,6DAMT2B,EANS,SAMIC,GAAa,IAAD,EAChC,iBAAOC,EAAMC,MAAK,SAAAhB,GAAI,OAAIA,EAAKc,KAAOA,YAAtC,aAAO,EAAoCG,MAN7CP,IADkB,SAGeT,IAHf,cAGZiB,EAHY,gBAIeV,IAJf,OAIZO,EAJY,OAUZI,EAAwBD,EAAM1B,KAAI,SAAAC,GACtC,MAAO,CACLqB,GAAIrB,EAAKqB,GACTf,MAAON,EAAKM,MACZD,UAAWL,EAAKK,UAChBE,KAAMa,EAAapB,EAAK2B,YAI5BT,EAAYQ,GAnBM,4CAAH,qDAsBjB,OACE,4BACExB,KAAK,SACLP,UAAU,2CACVG,QAASqB,GAET,uBAAGxB,UAAU,wBALf,eHkCWiC,EA1DO,WAAO,IAAD,EACQC,oBAAS,GADjB,mBACnBC,EADmB,KACRC,EADQ,OAEMF,oBAAS,GAFf,mBAEnBG,EAFmB,KAETC,EAFS,OAGcJ,mBAA0B,IAHxC,mBAGnB/C,EAHmB,KAGLoD,EAHK,OAIQL,oBAAkB,GAJ1B,mBAInBM,EAJmB,KAIRC,EAJQ,KAsB1B,OACE,iCAEKD,EAQG,4BACEjC,KAAK,SACLP,UAAU,2CACVG,QAAS,kBAAMoC,EAAgB,YAAItD,MAEnC,uBAAGe,UAAU,wBALf,SANA,kBAAC,EAAD,CACEsB,aAtBS,WACnBc,GAAa,GACbK,GAAa,IAqBHlB,YAlBQ,SAACQ,GACnBQ,EAAgBR,GAChB9C,EAAY,YAAO8C,GACnBK,GAAa,GACbE,GAAY,MA8BRH,EACI,uBAAGnC,UAAU,MAAb,eACA,qCAGJqC,EACI,kBAAC,EAAD,CAAOlD,aAAcA,EAAcC,UAjC7C,SAAmBQ,GACjB2C,EAAgB,YAAI3C,OAiCZ,uCIzDZ8C,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.14f10267.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './App.css';\nimport { PreparedProps } from './interfaces';\nimport { Table } from './Table';\nimport { Button } from './Button';\n\nlet initialState: PreparedProps[];\n\nconst App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [preparedList, setPreparedList] = useState<PreparedProps[]>([]);\n  const [isStarted, setIsStarted] = useState<boolean>(false);\n\n  const beforeLoaded = () => {\n    setIsLoading(true);\n    setIsStarted(true);\n  };\n\n  const afterLoaded = (list: PreparedProps[]) => {\n    setPreparedList(list);\n    initialState = [...list];\n    setIsLoading(false);\n    setIsLoaded(true);\n  };\n\n  function sortTodos(sorted: PreparedProps[]) {\n    setPreparedList([...sorted]);\n  }\n\n  return (\n    <section>\n      {\n        !isStarted\n          ? (\n            <Button\n              beforeLoaded={beforeLoaded}\n              afterLoaded={afterLoaded}\n            />\n          )\n          : (\n            <button\n              type=\"button\"\n              className=\"btn btn-dark ml shadow p-3 mb-5  rounded\"\n              onClick={() => setPreparedList([...initialState])}\n            >\n              <i className=\"material-icons left\" />\n              Reset\n            </button>\n          )\n      }\n\n      {\n        isLoading\n          ? <p className=\"ml\">Loading....</p>\n          : <></>\n      }\n      {\n        isLoaded\n          ? <Table preparedList={preparedList} sortTodos={sortTodos} />\n          : <></>\n      }\n    </section>\n  );\n};\n\nexport default App;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { uuid } from 'uuidv4';\nimport { PreparedProps, SortValue, PreparedListProps } from './interfaces';\n\nexport const Table: React.FC<PreparedListProps> = ({ preparedList, sortTodos }) => {\n  const getKeyValue = <T extends {}, U extends keyof T>(key: U, obj: T) => obj[key];\n\n  const sortBy = (event: { preventDefault: () => void }, value: SortValue) => {\n    event.preventDefault();\n    const sorted: PreparedProps[] = preparedList.sort((a: PreparedProps, b: PreparedProps) => {\n      const aValue = getKeyValue<PreparedProps, SortValue>(value, a) || {};\n      const bValue = getKeyValue<PreparedProps, SortValue>(value, b) || {};\n\n      return (aValue >= bValue) ? 1 : -1;\n    });\n\n    sortTodos(sorted);\n  };\n\n  return (\n    <table className=\"table table-striped table-bordered\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">\n            <a href=\"/\" onClick={(event) => sortBy(event, 'completed')}>\n              Completed\n            </a>\n          </th>\n          <th scope=\"col\">\n            <a href=\"/\" onClick={(event) => sortBy(event, 'title')}>\n              Title\n            </a>\n          </th>\n          <th scope=\"col\">\n            <a href=\"/\" onClick={(event) => sortBy(event, 'user')}>\n              User\n            </a>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          preparedList.map(todo => (\n            <tr key={uuid()}>\n              <td><input type=\"checkbox\" readOnly checked={todo.completed} /></td>\n              <td>{todo.title}</td>\n              <td>{todo.user}</td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","const URLTodos = 'https://mate.academy/students-api/todos';\nconst URLUsers = 'https://mate.academy/students-api/users';\n\nexport const getTodos = async () => {\n  const tempData = await fetch(URLTodos)\n    .then(response => response.json());\n\n  return tempData.data;\n};\n\nexport const getUsers = async () => {\n  const tempData = await fetch(URLUsers)\n    .then(response => response.json());\n\n  return tempData.data;\n};\n","import React from 'react';\nimport { TodoProps, UserProps, PreparedProps } from './interfaces';\nimport { getTodos, getUsers } from './api';\n\ninterface ButtonProps {\n  beforeLoaded: () => void;\n  afterLoaded: (list: PreparedProps[]) => void;\n}\n\nexport const Button: React.FC<ButtonProps> = ({ beforeLoaded, afterLoaded }) => {\n  const getTodoList = async () => {\n    beforeLoaded();\n\n    const todos: TodoProps[] = await getTodos();\n    const users: UserProps[] = await getUsers();\n\n    function findUserById(id: number) {\n      return users.find(user => user.id === id)?.name;\n    }\n\n    const list: PreparedProps[] = todos.map(todo => {\n      return {\n        id: todo.id,\n        title: todo.title,\n        completed: todo.completed,\n        user: findUserById(todo.userId),\n      };\n    });\n\n    afterLoaded(list);\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-dark ml shadow p-3 mb-5  rounded\"\n      onClick={getTodoList}\n    >\n      <i className=\"material-icons left\" />\n      Load todos\n    </button>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}